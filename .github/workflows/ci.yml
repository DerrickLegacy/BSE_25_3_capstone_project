name: Node.js React CI

# Trigger CI on push or pull request to main branch
on:
  push:
    branches: ['**']
    # branches: ["main"]
  pull_request:
    branches: ['main']

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      DB_NAME: ${{ secrets.MYSQL_DATABASE }}

    services:
      mysql:
        image: postgres:15
        env:
          PGHOST: ${{ secrets.PG_HOST }}
          PGPORT: ${{ secrets.PG_PORT }}
          PGUSER: ${{ secrets.PG_USER }}
          PGPASSWORD: ${{ secrets.PG_PASSWORD }}
          PGDATABASE: ${{ secrets.PG_DATABASE }}

        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install backend dependencies
        run: npm ci

      - name: Install frontend dependencies
        #run: npm install --no-audit --no-fund
        #working-directory: root
        #run: npm ci

        #run: npm install --no-audit --no-fund
        run: npm ci
        working-directory: client

      - name: Wait for Postgres
        run: sleep 15 # wait for postgres service to start

      - name: Run database migrations
        run: npm run migrate
        working-directory: .

      - name: Run backend tests
        run: npm test
        working-directory: .

      - name: Run frontend tests
        run: npm test
        working-directory: client

      - name: Run linting for backend
        run: npm run lint
        working-directory: .

      - name: Run linting for frontend
        run: npm run lint
        working-directory: client

      - name: Build frontend
        run: npm run build
        working-directory: client

name: üöÄ Automated Version Release

on:
  workflow_run:
    workflows: ['Node.js React CI']
    types: [completed]

concurrency:
  group: automated-version-release
  cancel-in-progress: true

jobs:
  release:
    name: üß† Semantic Versioning
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: üß© Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üöÄ Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  append_version_to_file:
    name: üßæ Append Version to File
    runs-on: ubuntu-latest
    needs: release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    permissions:
      contents: write

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: üè∑Ô∏è Get latest tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "Latest tag: $LATEST_TAG"

      - name: üìù Append version to version.txt
        run: |
          if ! grep -qx "$LATEST_TAG" version.txt; then
            echo "$LATEST_TAG" >> version.txt
            echo "‚úÖ Added version $LATEST_TAG to version.txt"
          else
            echo "‚ö†Ô∏è Version $LATEST_TAG already exists in version.txt ‚Äî skipping."
          fi

      - name: üíæ Commit and push version.txt safely
        run: |
          set -e
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git fetch origin main
          git checkout main
          git reset --hard origin/main

          git add version.txt
          if ! git diff --cached --quiet; then
            git commit -m "chore: append version $LATEST_TAG to version.txt [skip ci]"
            git push --force-with-lease https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
          else
            echo "üü¢ No new version to commit ‚Äî skipping push."
          fi
